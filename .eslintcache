[{"G:\\Web-koodit\\react-rpg\\src\\types.ts":"1","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action.tsx":"2","G:\\Web-koodit\\react-rpg\\src\\components\\player\\index.tsx":"3","G:\\Web-koodit\\react-rpg\\src\\components\\state\\reducer.tsx":"4","G:\\Web-koodit\\react-rpg\\src\\components\\state\\state.tsx":"5","G:\\Web-koodit\\react-rpg\\src\\hooks\\use-walk\\index.ts":"6","G:\\Web-koodit\\react-rpg\\src\\hooks\\use-key-press\\index.ts":"7","G:\\Web-koodit\\react-rpg\\src\\index.tsx":"8","G:\\Web-koodit\\react-rpg\\src\\App.tsx":"9","G:\\Web-koodit\\react-rpg\\src\\components\\game-object\\index.tsx":"10","G:\\Web-koodit\\react-rpg\\src\\components\\sprite\\index.tsx":"11","G:\\Web-koodit\\react-rpg\\src\\components\\tile\\wall.tsx":"12","G:\\Web-koodit\\react-rpg\\src\\components\\tile\\index.tsx":"13","G:\\Web-koodit\\react-rpg\\src\\components\\map\\index.tsx":"14","G:\\Web-koodit\\react-rpg\\src\\components\\tile\\floor.tsx":"15","G:\\Web-koodit\\react-rpg\\src\\hooks\\use-check-collision\\index.ts":"16","G:\\Web-koodit\\react-rpg\\src\\components\\state\\index.tsx":"17","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useSetPlayerPosition.ts":"18","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useSetMap.ts":"19","G:\\Web-koodit\\react-rpg\\src\\components\\npc\\index.tsx":"20","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useUseEnemyTurn.ts":"21","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useUsePlayerTurn.ts":"22","G:\\Web-koodit\\react-rpg\\src\\hooks\\use-wander\\index.ts":"23","G:\\Web-koodit\\react-rpg\\src\\utils\\random-enum.ts":"24","G:\\Web-koodit\\react-rpg\\src\\hooks\\use-generate-map\\index.ts":"25","G:\\Web-koodit\\react-rpg\\src\\utils\\collision.ts":"26","G:\\Web-koodit\\react-rpg\\src\\utils\\random-between-values.ts":"27","G:\\Web-koodit\\react-rpg\\src\\utils\\weighted-random.ts":"28"},{"size":980,"mtime":1610375782887,"results":"29","hashOfConfig":"30"},{"size":480,"mtime":1610280729462,"results":"31","hashOfConfig":"30"},{"size":1860,"mtime":1610280919746,"results":"32","hashOfConfig":"30"},{"size":877,"mtime":1610280777699,"results":"33","hashOfConfig":"30"},{"size":1220,"mtime":1610280784369,"results":"34","hashOfConfig":"30"},{"size":1524,"mtime":1610281032760,"results":"35","hashOfConfig":"30"},{"size":262,"mtime":1610212061389,"results":"36","hashOfConfig":"30"},{"size":293,"mtime":1610212783901,"results":"37","hashOfConfig":"30"},{"size":537,"mtime":1610333234238,"results":"38","hashOfConfig":"30"},{"size":475,"mtime":1610242497615,"results":"39","hashOfConfig":"30"},{"size":927,"mtime":1610281945288,"results":"40","hashOfConfig":"30"},{"size":545,"mtime":1610376523724,"results":"41","hashOfConfig":"30"},{"size":411,"mtime":1610242004706,"results":"42","hashOfConfig":"30"},{"size":2463,"mtime":1610376435452,"results":"43","hashOfConfig":"30"},{"size":579,"mtime":1610375947631,"results":"44","hashOfConfig":"30"},{"size":821,"mtime":1610280619352,"results":"45","hashOfConfig":"30"},{"size":79,"mtime":1610274010703,"results":"46","hashOfConfig":"30"},{"size":460,"mtime":1610274067086,"results":"47","hashOfConfig":"30"},{"size":403,"mtime":1610275041937,"results":"48","hashOfConfig":"30"},{"size":1294,"mtime":1610281528773,"results":"49","hashOfConfig":"30"},{"size":336,"mtime":1610280838466,"results":"50","hashOfConfig":"30"},{"size":340,"mtime":1610281012706,"results":"51","hashOfConfig":"30"},{"size":291,"mtime":1610283951956,"results":"52","hashOfConfig":"30"},{"size":371,"mtime":1610281758583,"results":"53","hashOfConfig":"30"},{"size":4423,"mtime":1610378935808,"results":"54","hashOfConfig":"30"},{"size":395,"mtime":1610329277661,"results":"55","hashOfConfig":"30"},{"size":134,"mtime":1610330508441,"results":"56","hashOfConfig":"30"},{"size":1044,"mtime":1610379058322,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1in6pwh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Web-koodit\\react-rpg\\src\\types.ts",[],[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\action.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\player\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\reducer.tsx",["119","120"],"import { State, Action, ActionType } from '../state';\r\nimport { Position, MapData } from '../../types';\r\n\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case ActionType.SET_PLAYER_POSITION:\r\n            return {\r\n                ...state,\r\n                playerPosition: action.payload\r\n            };\r\n        case ActionType.SET_MAP:\r\n            return {\r\n                ...state,\r\n                mapData: action.payload,\r\n                mapLoaded: true\r\n            };\r\n        case ActionType.USE_PLAYER_TURN:\r\n            return {\r\n                ...state,\r\n                playerTurn: false\r\n            };\r\n        case ActionType.USE_ENEMY_TURN:\r\n            return {\r\n                ...state,\r\n                playerTurn: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","G:\\Web-koodit\\react-rpg\\src\\components\\state\\state.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\hooks\\use-walk\\index.ts",[],"G:\\Web-koodit\\react-rpg\\src\\hooks\\use-key-press\\index.ts",[],"G:\\Web-koodit\\react-rpg\\src\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\App.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\game-object\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\sprite\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\tile\\wall.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\tile\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\map\\index.tsx",["121","122","123"],"import React, { useEffect } from 'react';\r\nimport Floor from '../tile/floor';\r\nimport Wall from '../tile/wall';\r\nimport { TileType, Tile, MapData, Position } from '../../types';\r\nimport { useStateValue } from '../state';\r\nimport useSetMap from '../state/action-hooks/useSetMap';\r\nimport useGenerateMap from '../../hooks/use-generate-map';\r\n\r\nconst Map: React.FC = () => {\r\n    const [{ mapData, mapLoaded }] = useStateValue();\r\n    const { setMap } = useSetMap();\r\n    const mapTiles = require(\"../../data/maps/map0.json\").tiles;\r\n    const { generateMap } = useGenerateMap();\r\n\r\n    // useEffect(() => {\r\n    //     const _tiles = [];\r\n\r\n    //     for (let y = 0; y < mapTiles.length; y++) {\r\n    //         const row: Tile[] = [];\r\n    //         for (let x = 0; x < mapTiles[0].length; x++) {\r\n    //             const tile = {\r\n    //                 type: mapTiles[y][x] === 1 ? TileType.floor : TileType.wall,\r\n    //                 id: (mapTiles.length * y) + x,\r\n    //                 position: { x, y },\r\n    //                 passable: mapTiles[y][x] === 1 ? true : false\r\n    //             };\r\n    //             row.push(tile);\r\n    //         }\r\n    //         _tiles.push(row);\r\n    //     }\r\n\r\n    //     const mapData: MapData = {\r\n    //         size: { h: mapTiles.length, w: mapTiles[0].length },\r\n    //         tiles: _tiles\r\n    //     };\r\n\r\n    //     setMap(mapData);\r\n    // }, [mapTiles]);\r\n    useEffect(() => {\r\n        if (!mapLoaded) {\r\n            const map = generateMap({ h: 22, w: 31 });\r\n            setMap(map);\r\n        }\r\n    }, [mapLoaded]);\r\n\r\n    useEffect(() => {\r\n        console.log('mapDataChanged', mapLoaded);\r\n    }, [mapData]);\r\n\r\n    const tileToRender = (tile: Tile) => {\r\n        switch (tile.type) {\r\n            case TileType.floor:\r\n                return <Floor key={tile.id} position={tile.position} spriteIndex={tile.spriteIndex} />;\r\n            case TileType.wall:\r\n                return <Wall key={tile.id} position={tile.position} spriteIndex={tile.spriteIndex} />;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    if (!mapData.tiles) return null;\r\n\r\n    return (\r\n        <>\r\n            {mapData.tiles.map((row, index) => (\r\n                <div key={index}>\r\n                    {row.map((tile) => {\r\n                        return tileToRender(tile);\r\n                    })}\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n\r\n","G:\\Web-koodit\\react-rpg\\src\\components\\tile\\floor.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\hooks\\use-check-collision\\index.ts",[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\index.tsx",[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useSetPlayerPosition.ts",[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useSetMap.ts",[],"G:\\Web-koodit\\react-rpg\\src\\components\\npc\\index.tsx",["124","125"],"import React, { useEffect, useState } from 'react';\r\nimport GameObject from '../game-object';\r\nimport useWalk from '../../hooks/use-walk';\r\nimport useWander from '../../hooks/use-wander';\r\nimport { useStateValue } from '../state';\r\nimport { Direction, Position } from '../../types';\r\nimport useUseEnemyTurn from '../state/action-hooks/useUseEnemyTurn';\r\n\r\ninterface Props {\r\n    skin: string,\r\n    startPosition?: Position\r\n}\r\n\r\nconst Npc: React.FC<Props> = ({ skin, startPosition = { x: 8, y: 8 } }) => {\r\n    const [{ mapLoaded, playerTurn }] = useStateValue();\r\n    const { useEnemyTurn } = useUseEnemyTurn();\r\n    const { getRandomDirection } = useWander();\r\n\r\n    const { dir, step, walk, position } = useWalk(3, 1, startPosition);\r\n\r\n    useEffect(() => {\r\n        if (mapLoaded) {\r\n            if (!playerTurn) {\r\n                walk(getRandomDirection());\r\n                useEnemyTurn();\r\n            }\r\n        }\r\n    }, [playerTurn, mapLoaded]);\r\n\r\n    // useEffect(() => {\r\n    //     walk(Direction.left);\r\n    // }, []);\r\n\r\n    return <GameObject\r\n        spriteData={{\r\n            offset_x: step,\r\n            offset_y: dir,\r\n            image: `/sprites/skins/${skin}.png`,\r\n            layer: 1\r\n        }}\r\n        position={position}\r\n    />;\r\n\r\n};\r\n\r\nexport default Npc;\r\n","G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useUseEnemyTurn.ts",[],"G:\\Web-koodit\\react-rpg\\src\\components\\state\\action-hooks\\useUsePlayerTurn.ts",[],"G:\\Web-koodit\\react-rpg\\src\\hooks\\use-wander\\index.ts",[],"G:\\Web-koodit\\react-rpg\\src\\utils\\random-enum.ts",[],"G:\\Web-koodit\\react-rpg\\src\\hooks\\use-generate-map\\index.ts",["126"],"G:\\Web-koodit\\react-rpg\\src\\utils\\collision.ts",[],[],"G:\\Web-koodit\\react-rpg\\src\\utils\\random-between-values.ts",[],"G:\\Web-koodit\\react-rpg\\src\\utils\\weighted-random.ts",[],{"ruleId":"127","severity":1,"message":"128","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":2,"column":20,"nodeType":"129","messageId":"130","endLine":2,"endColumn":27},{"ruleId":"127","severity":1,"message":"131","line":4,"column":26,"nodeType":"129","messageId":"130","endLine":4,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":4,"column":35,"nodeType":"129","messageId":"130","endLine":4,"endColumn":43},{"ruleId":"127","severity":1,"message":"132","line":12,"column":11,"nodeType":"129","messageId":"130","endLine":12,"endColumn":19},{"ruleId":"127","severity":1,"message":"133","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"134","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"135","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":17},"@typescript-eslint/no-unused-vars","'Position' is defined but never used.","Identifier","unusedVar","'MapData' is defined but never used.","'mapTiles' is assigned a value but never used.","'useState' is defined but never used.","'Direction' is defined but never used.","'collision' is defined but never used."]